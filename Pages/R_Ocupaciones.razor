@page "/ocupacion"
@page "/ocupacion/{OcupacionId:int}"
@inject OcupacionesBLL ocupacionesBll

<EditForm Model="ocupacion" OnValidSubmit="Guardar">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h3>Registro de Ocupaciones</h3>
        </div>
        
            <div class="form-group">
                <label>OcupacionID</label>
                <InputNumber @bind-Value="ocupacion.OcupacionId" class="form-control" />
                <button type="button" class="bi bi-search btn btn-primary input-group-text"  @onclick="Buscar" > Buscar </button>
                <ValidationMessage For="@(() => ocupacion.OcupacionId)" />
             </div>
            
            <div class="form-group">
                <label>Descripción</label>
                <InputText @bind-Value="ocupacion.Descripcion" class="form-control" />
                <ValidationMessage For="@(() => ocupacion.Descripcion)" />
            </div>

            <div class="form-group">
                <label>Salario</label>
                <InputNumber @bind-Value="ocupacion.Salario" class="form-control" />
                <ValidationMessage For="@(() => ocupacion.Salario)" />
            </div>
        </div>
        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="submit" class="bi bi-file-earmark-fill btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
                <button type="submit" class="bi bi-file-earmark-text-fill btn btn-lg btn-success"@onclick="Guardar">Guardar</button>
                <button type="submit" class="bi bi-trash btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
            </div>

        </div>
</EditForm>

@code {

    [Parameter]

    public int OcupacionId { get; set; }
    public Ocupaciones ocupacion { get; set; } = new Ocupaciones();
    

    protected override void OnInitialized()
    {
        if(OcupacionId > 0)
        {
            this.ocupacion.OcupacionId = OcupacionId;
            this.Buscar();
        }
    }

    public void Buscar()
    {
        var ocupacionEncontrada = ocupacionesBll.Buscar(ocupacion.OcupacionId);

        if(ocupacionEncontrada != null)
        {
            this.ocupacion = ocupacionEncontrada;
        }
    }

    public void Nuevo()
    {
        this.ocupacion = new Ocupaciones();
    }

    public void Guardar()
    {
       var guardado = ocupacionesBll.Guardar(ocupacion);

        if (guardado)
        {
            Nuevo();
            
        }
        else
        {
            
        }
    }

    public void Eliminar()
    {
        bool eliminado = ocupacionesBll.Eliminar(ocupacion);

        eliminado = false; 

        if (eliminado)
        {
            Nuevo();   
        }
        else
        {
            
        }

    }
}



